# silver 3
# pypy 기준 180ms
# python3 기준 시간초과

from math import isqrt

# math.isqrt(n)
# 음이 아닌 정수 n의 정수 제곱근을 반환한다.
# 즉, a^2 <= n을 만족하는 가장 큰 정수 a를 반환한다.

# 1부터 출발한다고 생각해보자.
# 1, 4, 9, 16, ..., 로 이어지는 모든 제곱수는 답이 1이다.
# N <= 50000이므로, isqrt(N)의 최댓값은 223이다.
# 1: 1^2, 2: 1^2+1^2, 3: 1^2+1^2+1^2
# 4: 2^2, 5: 2^2+1^2, 6: 2^2+1^2+1^2, 7: 2^2+1^2+1^2+1^2, 8: 2^2+2^2
# 4~7까지 제곱수부터 1씩 더해지고, 8은 4를 두 번 더한 것
# 8은 7에 1을 더하는 것, 4에 4를 더하는 것을 확인하면 된다.
# 9는 다시 1
# 12: 2^2+2^2+2^2, 1+11, 4+8를 확인해서 최솟값
# 13: 3^2+2^2, 1+12, 4+9, 9+4를 확인해서 최솟값
# 결국 규칙은 제곱수만 전부 확인하면 되겠다.

n = int(input())

memo = [4 for _ in range(50001)]
memo[1] = 1
memo[2] = 2
memo[3] = 3

for i in range(4, 50001):
    if isqrt(i) == i ** (1/2):
        memo[i] = 1
    else:
        j = 1
        while j ** 2 <= i:
            memo[i] = min(memo[i], memo[i-j**2] + memo[j**2])
            j += 1

print(memo[n])
